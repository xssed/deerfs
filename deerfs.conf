[system_tag]
#Give the deerfs node of the current host a unique name in the cluster, such as deerfs1, deerfs2, deerfs3. . . . . .
#After deerfs is started, it will update the name and mysql server data. Once the name is registered, please be careful to modify the name.
#给当前主机的deerfs节点起一个在集群中的唯一名字，例如deerfs1，deerfs2，deerfs3。。。。。。
#deerfs启动后会将名字与mysql服务器进行数据更新，一旦名字注册后请谨慎修改名字。
name=deerfs1

#Whether to allow this node to store identical files redundantly in the cluster.0 is off, 1 is on. Default is off. After it is enabled, the node will repeat the storage (configured on demand) when storing files that already exist in the cluster.
#是否允许该节点在集群中冗余存储相同文件。0关闭，1开启。默认为关闭。开启后，该节点存储集群中已经存在的文件时会重复存储(按需配置)。
allow_duplicates=0


[http]
#The IP address of deerfs.
#deerfs的IP地址。
http_addr=0.0.0.0

#Port of deerfs.
#deerfs的端口。
http_port=7727


[owlcache]
#The address of owlcache (HTTP service).
#owlcache(HTTP服务)的地址。
owlcache_addr=127.0.0.1:7721

#Password for owlcache (HTTP service).
#owlcache(HTTP服务)的密码。
owlcache_password=


[file_storage]
#File storage directory.
#文件存储的目录。
directory_path=./deerfs_data/

#Node directory max storage capacity.Default size 1TB.Units is bytes.
#节点目录最大存储容量。默认大小1TB。单位是字节。
directory_storage_max_size=1099511627776

#Max storage size for a single file.Default size 5M.Units is bytes.
#单个文件的最大存储大小。默认大小5M。单位是字节。
file_storage_max_size=5242880


[upload]
#Form submit fields.
#表单提交字段。
form_field=upload


[mysql]
#The address of mysql.
#mysql的地址。
host=127.0.0.1

#The port of mysql.
#mysql的端口。
port=3306

#Connect to the mysql account.
#连接mysql的账号。
user=

#Password for connecting to mysql.
#连接mysql的密码。
password=

#The database name of deerfs in mysql.
#mysql中deerfs的数据库名称。
database=deerfs

#The database charset of deerfs in mysql.
#mysql中deerfs的数据库对应编码。
charset=utf8